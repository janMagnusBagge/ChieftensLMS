@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.Owin
<!DOCTYPE html>
<html ng-app="app">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
	<link rel="stylesheet" href="~/Content/jquery-ui.css">
	<script src="~/Scripts/angular.js"></script>
	<script src="~/Scripts/ng-file-upload-shim.js"></script>
	<script src="~/Scripts/ng-file-upload.js"></script>
	<script src="~/Scripts/chieften/app.js"></script>
	<script src="~/Scripts/chieften/ApiService.js"></script>
	@*<script src="~/Scripts/jquery-ui.js"></script>*@


</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
	@{
		if (Request.IsAuthenticated == false)
		{
			<div style="background: red; color:white; font-weight:bold; padding:20px">NOT LOGGED IN!</div>
		}
	}
	<div class="container">
		<div class="btn-group" role="group" aria-label="...">
			
			@{var _userManager = Request.GetOwinContext().GetUserManager<ApplicationUserManager>();}
			@if (Request.IsAuthenticated && _userManager.IsInRole(User.Identity.GetUserId(), "Teacher"))
			{
				@Html.ActionLink("Mina Kurser", "Overview", "Course", null, new { @class = "btn btn-default btn-sm" })
				@Html.ActionLink("Mina Delade Filer", "Mine", "SharedFile", null, new { @class = "btn btn-default btn-sm" })
				@Html.ActionLink("Mitt Schema", "MyLectures", "Lectures", null, new { @class = "btn btn-default btn-sm" })
				@Html.ActionLink("Skapa konto", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default btn-sm" })
				@Html.ActionLink("Konton", "Index", "StudentAccount", null, new { @class = "btn btn-default btn-sm" })
			}
			else
			{
				@Html.ActionLink("Mina Kurser", "Overview", "Course", null, new { @class = "btn btn-default btn-sm" })
				@Html.ActionLink("Mina Delade Filer", "Mine", "SharedFile", null, new { @class = "btn btn-default btn-sm" })
				@Html.ActionLink("Mitt Schema", "MyLectures", "Lectures", null, new { @class = "btn btn-default btn-sm" })
			}
		</div>
	</div>



		<div class="container body-content">
			@RenderBody()
			<hr />
			<footer>
				<p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
			</footer>
		</div>

		<div class="container">
			<b>AspNetUsers.Id: </b>@User.Identity.GetUserId()

		</div>

		@Scripts.Render("~/bundles/jquery")
		@Scripts.Render("~/bundles/bootstrap")
		@RenderSection("scripts", required: false)
	<script>
		$(function () {
			var dateFormat = "yy-mm-dd",
			  from = $("#StartDate")
				.datepicker({
					defaultDate: "+1w",
					changeMonth: true,
					changeYear: true,
					numberOfMonths: 3,
					showWeek: true,
					firstDay: 1,
					dateFormat: "yy-mm-dd"
				})
				.on("change", function () {
					to.datepicker("option", "minDate", getDate(this));
					//to.trigger('to');
					//from.trigger('from');
				}),
			  to = $("#EndDate").datepicker({
			  	defaultDate: "+1w",
			  	changeMonth: true,
			  	changeYear: true,
			  	numberOfMonths: 3,
			  	showWeek: true,
			  	firstDay: 1,
			  	dateFormat: "yy-mm-dd"
			  })
			  .on("change", function () {
			  	from.datepicker("option", "maxDate", getDate(this));
			  	//to.trigger('to');
			  	//from.trigger('from');
			  });

			function getDate(element) {
				var date;
				try {
					date = $.datepicker.parseDate(dateFormat, element.value);
				} catch (error) {
					date = null;
				}

				return date;
			}
		});

		(function ($, ng) {
			'use strict';

			var $val = $.fn.val; // save original jQuery function

			// override jQuery function
			$.fn.val = function (value) {
				// if getter, just return original
				if (!arguments.length) {
					return $val.call(this);
				}

				// get result of original function
				var result = $val.call(this, value);

				// trigger angular input (this[0] is the DOM object)
				ng.element(this[0]).triggerHandler('input');

				// return the original result
				return result;
			}
		})(window.jQuery, window.angular);
	</script>

</body>
</html>
